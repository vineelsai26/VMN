name: "Release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install zip
        run: sudo apt install zip

      - name: "Build"
        env:
          tag: ${{ github.event.release.tag_name }}
        run: |
          # Windows AMD64
          env GOOS=windows GOARCH=amd64 go build
          zip vmn-windows-amd64.zip vmn.exe
          go clean

          # Windows ARM64
          env GOOS=windows GOARCH=arm64 go build
          zip vmn-windows-arm64.zip vmn.exe
          go clean

          # Linux AMD64
          env GOOS=linux GOARCH=amd64 go build
          tar -czvf vmn-linux-amd64.tar.gz vmn

          # Debian AMD64
          mkdir -p package/vmn-debian/usr/bin
          mkdir -p package/vmn-debian/DEBIAN
          cp vmn package/vmn-debian/usr/bin
          release=$(echo "$tag" | awk '{gsub("v",""); print}')
          printf "Package: vmn\nVersion: $release\nSection: custom\nPriority: optional\nArchitecture: amd64\nMaintainer: Vineel Sai\nDescription: Version Manager for Node\nHomepage: https://vineelsai.com\n" > package/vmn-debian/DEBIAN/control
          dpkg-deb --build package/vmn-debian vmn-linux-amd64.deb
          rm -rf package
          go clean

          # Linux ARM64
          env GOOS=linux GOARCH=arm64 go build
          tar -czvf vmn-linux-arm64.tar.gz vmn

          # Debian ARM64
          mkdir -p package/vmn-debian/usr/bin
          mkdir -p package/vmn-debian/DEBIAN
          cp vmn package/vmn-debian/usr/bin
          release=$(echo "$tag" | awk '{gsub("v",""); print}')
          printf "Package: vmn\nVersion: $release\nSection: custom\nPriority: optional\nArchitecture: arm64\nMaintainer: Vineel Sai\nDescription: Version Manager for Node\nHomepage: https://vineelsai.com\n" > package/vmn-debian/DEBIAN/control
          dpkg-deb --build package/vmn-debian vmn-linux-arm64.deb
          rm -rf package
          go clean

          # MacOS AMD64
          env GOOS=darwin GOARCH=amd64 go build
          tar -czvf vmn-macos-amd64.tar.gz vmn
          go clean

          # MacOS ARM64
          env GOOS=darwin GOARCH=arm64 go build
          tar -czvf vmn-macos-arm64.tar.gz vmn
          go clean

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.RELEASE_TOKEN }}"
          prerelease: false
          files: |
            *.tar.gz
            *.zip
